// Generated from Lang.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from "antlr4";

const serializedATN = [
  "\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
  "\u5964\u0002\n\u00a8\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
  "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
  "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
  "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
  "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
  "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
  "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
  "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
  '\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004"\t"\u0004#',
  "\t#\u0004$\t$\u0004%\t%\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
  "\u0003\u0004\u0003\u0004\u0003\u0005\u0006\u0005S\n\u0005\r\u0005\u000e",
  "\u0005T\u0003\u0005\u0003\u0005\u0003\u0006\u0006\u0006Z\n\u0006\r\u0006",
  "\u000e\u0006[\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003",
  "\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003",
  "\b\u0003\b\u0003\t\u0003\t\u0006\tm\n\t\r\t\u000e\tn\u0003\n\u0003\n",
  "\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e",
  "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011",
  "\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014",
  "\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0017",
  "\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a",
  "\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001d",
  "\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001f\u0003\u001f\u0003 ",
  '\u0003 \u0003!\u0003!\u0003"\u0003"\u0003#\u0003#\u0003$\u0003$\u0003',
  "%\u0003%\u0002\u0002&\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
  "\u0007\r\b\u000f\t\u0011\n\u0013\u0002\u0015\u0002\u0017\u0002\u0019",
  "\u0002\u001b\u0002\u001d\u0002\u001f\u0002!\u0002#\u0002%\u0002'\u0002",
  ")\u0002+\u0002-\u0002/\u00021\u00023\u00025\u00027\u00029\u0002;\u0002",
  "=\u0002?\u0002A\u0002C\u0002E\u0002G\u0002I\u0002\u0003\u0002 \u0004",
  '\u0002\u000b\u000b""\u0004\u0002\f\f\u000f\u000f\u0004\u0002CCcc\u0004',
  "\u0002DDdd\u0004\u0002EEee\u0004\u0002FFff\u0004\u0002GGgg\u0004\u0002",
  "HHhh\u0004\u0002IIii\u0004\u0002JJjj\u0004\u0002KKkk\u0004\u0002LLl",
  "l\u0004\u0002MMmm\u0004\u0002NNnn\u0004\u0002OOoo\u0004\u0002PPpp\u0004",
  "\u0002QQqq\u0004\u0002RRrr\u0004\u0002SSss\u0004\u0002TTtt\u0004\u0002",
  "UUuu\u0004\u0002VVvv\u0004\u0002WWww\u0004\u0002XXxx\u0004\u0002YYy",
  "y\u0004\u0002ZZzz\u0004\u0002[[{{\u0004\u0002\\\\||\u0003\u0002c|\u0003",
  "\u0002C\\\u0002\u008f\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
  "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
  "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
  "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
  "\u0003\u0002\u0002\u0002\u0003K\u0003\u0002\u0002\u0002\u0005M\u0003",
  "\u0002\u0002\u0002\u0007O\u0003\u0002\u0002\u0002\tR\u0003\u0002\u0002",
  "\u0002\u000bY\u0003\u0002\u0002\u0002\r_\u0003\u0002\u0002\u0002\u000f",
  "e\u0003\u0002\u0002\u0002\u0011l\u0003\u0002\u0002\u0002\u0013p\u0003",
  "\u0002\u0002\u0002\u0015r\u0003\u0002\u0002\u0002\u0017t\u0003\u0002",
  "\u0002\u0002\u0019v\u0003\u0002\u0002\u0002\u001bx\u0003\u0002\u0002",
  "\u0002\u001dz\u0003\u0002\u0002\u0002\u001f|\u0003\u0002\u0002\u0002",
  "!~\u0003\u0002\u0002\u0002#\u0080\u0003\u0002\u0002\u0002%\u0082\u0003",
  "\u0002\u0002\u0002'\u0084\u0003\u0002\u0002\u0002)\u0086\u0003\u0002",
  "\u0002\u0002+\u0088\u0003\u0002\u0002\u0002-\u008a\u0003\u0002\u0002",
  "\u0002/\u008c\u0003\u0002\u0002\u00021\u008e\u0003\u0002\u0002\u0002",
  "3\u0090\u0003\u0002\u0002\u00025\u0092\u0003\u0002\u0002\u00027\u0094",
  "\u0003\u0002\u0002\u00029\u0096\u0003\u0002\u0002\u0002;\u0098\u0003",
  "\u0002\u0002\u0002=\u009a\u0003\u0002\u0002\u0002?\u009c\u0003\u0002",
  "\u0002\u0002A\u009e\u0003\u0002\u0002\u0002C\u00a0\u0003\u0002\u0002",
  "\u0002E\u00a2\u0003\u0002\u0002\u0002G\u00a4\u0003\u0002\u0002\u0002",
  "I\u00a6\u0003\u0002\u0002\u0002KL\u0007}\u0002\u0002L\u0004\u0003\u0002",
  "\u0002\u0002MN\u0007\u007f\u0002\u0002N\u0006\u0003\u0002\u0002\u0002",
  "OP\u0007B\u0002\u0002P\b\u0003\u0002\u0002\u0002QS\t\u0002\u0002\u0002",
  "RQ\u0003\u0002\u0002\u0002ST\u0003\u0002\u0002\u0002TR\u0003\u0002\u0002",
  "\u0002TU\u0003\u0002\u0002\u0002UV\u0003\u0002\u0002\u0002VW\b\u0005",
  "\u0002\u0002W\n\u0003\u0002\u0002\u0002XZ\t\u0003\u0002\u0002YX\u0003",
  "\u0002\u0002\u0002Z[\u0003\u0002\u0002\u0002[Y\u0003\u0002\u0002\u0002",
  "[\\\u0003\u0002\u0002\u0002\\]\u0003\u0002\u0002\u0002]^\b\u0006\u0002",
  "\u0002^\f\u0003\u0002\u0002\u0002_`\u0005\u0019\r\u0002`a\u0005\u001b",
  "\u000e\u0002ab\u0005\u001d\u000f\u0002bc\u0005;\u001e\u0002cd\u0005",
  "-\u0017\u0002d\u000e\u0003\u0002\u0002\u0002ef\u0005\u0017\f\u0002f",
  "g\u0005\u0013\n\u0002gh\u0005)\u0015\u0002hi\u0005)\u0015\u0002i\u0010",
  "\u0003\u0002\u0002\u0002jm\u0005G$\u0002km\u0005I%\u0002lj\u0003\u0002",
  "\u0002\u0002lk\u0003\u0002\u0002\u0002mn\u0003\u0002\u0002\u0002nl\u0003",
  "\u0002\u0002\u0002no\u0003\u0002\u0002\u0002o\u0012\u0003\u0002\u0002",
  "\u0002pq\t\u0004\u0002\u0002q\u0014\u0003\u0002\u0002\u0002rs\t\u0005",
  "\u0002\u0002s\u0016\u0003\u0002\u0002\u0002tu\t\u0006\u0002\u0002u\u0018",
  "\u0003\u0002\u0002\u0002vw\t\u0007\u0002\u0002w\u001a\u0003\u0002\u0002",
  "\u0002xy\t\b\u0002\u0002y\u001c\u0003\u0002\u0002\u0002z{\t\t\u0002",
  "\u0002{\u001e\u0003\u0002\u0002\u0002|}\t\n\u0002\u0002} \u0003\u0002",
  '\u0002\u0002~\u007f\t\u000b\u0002\u0002\u007f"\u0003\u0002\u0002\u0002',
  "\u0080\u0081\t\f\u0002\u0002\u0081$\u0003\u0002\u0002\u0002\u0082\u0083",
  "\t\r\u0002\u0002\u0083&\u0003\u0002\u0002\u0002\u0084\u0085\t\u000e",
  "\u0002\u0002\u0085(\u0003\u0002\u0002\u0002\u0086\u0087\t\u000f\u0002",
  "\u0002\u0087*\u0003\u0002\u0002\u0002\u0088\u0089\t\u0010\u0002\u0002",
  "\u0089,\u0003\u0002\u0002\u0002\u008a\u008b\t\u0011\u0002\u0002\u008b",
  ".\u0003\u0002\u0002\u0002\u008c\u008d\t\u0012\u0002\u0002\u008d0\u0003",
  "\u0002\u0002\u0002\u008e\u008f\t\u0013\u0002\u0002\u008f2\u0003\u0002",
  "\u0002\u0002\u0090\u0091\t\u0014\u0002\u0002\u00914\u0003\u0002\u0002",
  "\u0002\u0092\u0093\t\u0015\u0002\u0002\u00936\u0003\u0002\u0002\u0002",
  "\u0094\u0095\t\u0016\u0002\u0002\u00958\u0003\u0002\u0002\u0002\u0096",
  "\u0097\t\u0017\u0002\u0002\u0097:\u0003\u0002\u0002\u0002\u0098\u0099",
  "\t\u0018\u0002\u0002\u0099<\u0003\u0002\u0002\u0002\u009a\u009b\t\u0019",
  "\u0002\u0002\u009b>\u0003\u0002\u0002\u0002\u009c\u009d\t\u001a\u0002",
  "\u0002\u009d@\u0003\u0002\u0002\u0002\u009e\u009f\t\u001b\u0002\u0002",
  "\u009fB\u0003\u0002\u0002\u0002\u00a0\u00a1\t\u001c\u0002\u0002\u00a1",
  "D\u0003\u0002\u0002\u0002\u00a2\u00a3\t\u001d\u0002\u0002\u00a3F\u0003",
  "\u0002\u0002\u0002\u00a4\u00a5\t\u001e\u0002\u0002\u00a5H\u0003\u0002",
  "\u0002\u0002\u00a6\u00a7\t\u001f\u0002\u0002\u00a7J\u0003\u0002\u0002",
  "\u0002\u0007\u0002T[ln\u0003\u0002\u0003\u0002"
].join("");

const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map(
  (ds, index) => new antlr4.dfa.DFA(ds, index)
);

export default class LangLexer extends antlr4.Lexer {
  static grammarFileName = "Lang.g4";
  static channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
  static modeNames = ["DEFAULT_MODE"];
  static literalNames = [null, "'{'", "'}'", "'@'"];
  static symbolicNames = [
    null,
    null,
    null,
    null,
    "WS",
    "NL",
    "DEFUN",
    "CALL",
    "IDENTIFIER"
  ];
  static ruleNames = [
    "T__0",
    "T__1",
    "T__2",
    "WS",
    "NL",
    "DEFUN",
    "CALL",
    "IDENTIFIER",
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "LOWERCASE",
    "UPPERCASE"
  ];

  constructor(input) {
    super(input);
    this._interp = new antlr4.atn.LexerATNSimulator(
      this,
      atn,
      decisionsToDFA,
      new antlr4.PredictionContextCache()
    );
  }

  get atn() {
    return atn;
  }
}

LangLexer.EOF = antlr4.Token.EOF;
LangLexer.T__0 = 1;
LangLexer.T__1 = 2;
LangLexer.T__2 = 3;
LangLexer.WS = 4;
LangLexer.NL = 5;
LangLexer.DEFUN = 6;
LangLexer.CALL = 7;
LangLexer.IDENTIFIER = 8;
